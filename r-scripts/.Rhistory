labs(x = "", y = "") +
theme_bw() +
# theme(panel.grid = element_blank())
theme(axis.title = element_text(size=16, hjust=0.5),
axis.text = element_text(size=16))
# ### PARTIAL EFFECTS ### #
# # IBI - MFCC # #
partial_effects_ibi_mfcc <- bind_rows(lapply(1:length(unique(model_data$participant)), function(i){
part_data <- filter(model_data, participant == as.character(i))
if(nrow(part_data) > 0){
curr_model <- lm(mean_ibi ~ mfcc6_std + zero_cross_std, data=part_data)
curr_response <- predict_response(curr_model, c("mfcc6_std"))
slope <- (curr_response[2,2] - curr_response[1,2])/(curr_response[2,1] - curr_response[1,1])
data.frame(participant = as.character(i), slope = as.character(slope))
} else {
data.frame(participant = NA, slope = NA)
}
})) %>%
mutate(slope = as.numeric(slope))
partial_ibi_mfcc <- ggplot(data = partial_effects_ibi_mfcc, aes(x = slope)) +
geom_histogram() +
labs(x = "", y = "") +
theme_bw() +
# theme(panel.grid = element_blank())
theme(axis.title = element_text(size=16, hjust=0.5),
axis.text = element_text(size=16))
partial_ibi_mfcc
# # IBI - ZCR # #
partial_effects_ibi_zcr <- bind_rows(lapply(1:length(unique(model_data$participant)), function(i){
part_data <- filter(model_data, participant == as.character(i))
if(nrow(part_data) > 0){
curr_model <- lm(mean_ibi ~ mfcc6_std + zero_cross_std, data=part_data)
curr_response <- predict_response(curr_model, c("zero_cross_std"))
slope <- (curr_response[2,2] - curr_response[1,2])/(curr_response[2,1] - curr_response[1,1])
data.frame(participant = as.character(i), slope = as.character(slope))
} else {
data.frame(participant = NA, slope = NA)
}
})) %>%
mutate(slope = as.numeric(slope))
partial_ibi_zcr <- ggplot(data = partial_effects_ibi_zcr, aes(x = slope)) +
geom_histogram() +
labs(x = "", y = "") +
theme_bw() +
# theme(panel.grid = element_blank())
theme(axis.title = element_text(size=16, hjust=0.5),
axis.text = element_text(size=16))
partial_ibi_zcr
# # GSR - MFCC # #
partial_effects_gsr_mfcc <- bind_rows(lapply(1:length(unique(model_data$participant)), function(i){
part_data <- filter(model_data, participant == as.character(i))
if(nrow(part_data) > 0){
curr_model <- lm(gsr_std ~ mfcc6_std + zero_cross_std, data=part_data)
curr_response <- predict_response(curr_model, c("mfcc6_std"))
slope <- (curr_response[2,2] - curr_response[1,2])/(curr_response[2,1] - curr_response[1,1])
data.frame(participant = as.character(i), slope = as.character(slope))
} else {
data.frame(participant = NA, slope = NA)
}
})) %>%
mutate(slope = as.numeric(slope))
partial_gsr_mfcc <- ggplot(data = partial_effects_gsr_mfcc, aes(x = slope)) +
geom_histogram() +
labs(x = "", y = "") +
theme_bw() +
# theme(panel.grid = element_blank())
theme(axis.title = element_text(size=16, hjust=0.5),
axis.text = element_text(size=16))
partial_ibi_zcr
# # GSR - ZCR # #
partial_effects_gsr_zcr <- bind_rows(lapply(1:length(unique(model_data$participant)), function(i){
part_data <- filter(model_data, participant == as.character(i))
if(nrow(part_data) > 0){
curr_model <- lm(gsr_std ~ mfcc6_std + zero_cross_std, data=part_data)
curr_response <- predict_response(curr_model, c("zero_cross_std"))
slope <- (curr_response[2,2] - curr_response[1,2])/(curr_response[2,1] - curr_response[1,1])
data.frame(participant = as.character(i), slope = as.character(slope))
} else {
data.frame(participant = NA, slope = NA)
}
})) %>%
mutate(slope = as.numeric(slope))
partial_gsr_zcr <- ggplot(data = partial_effects_gsr_zcr, aes(x = slope)) +
geom_histogram() +
labs(x = "", y = "") +
theme_bw() +
# theme(panel.grid = element_blank())
theme(axis.title = element_text(size=16, hjust=0.5),
axis.text = element_text(size=16))
cowplot::plot_grid(partial_ibi_mfcc, partial_ibi_zcr, partial_gsr_mfcc, partial_gsr_zcr, nrows=2)
partial_gsr_mfcc
# # GSR - ZCR # #
partial_effects_gsr_zcr <- bind_rows(lapply(1:length(unique(model_data$participant)), function(i){
part_data <- filter(model_data, participant == as.character(i))
if(nrow(part_data) > 0){
curr_model <- lm(gsr_std ~ mfcc6_std + zero_cross_std, data=part_data)
curr_response <- predict_response(curr_model, c("zero_cross_std"))
slope <- (curr_response[2,2] - curr_response[1,2])/(curr_response[2,1] - curr_response[1,1])
data.frame(participant = as.character(i), slope = as.character(slope))
} else {
data.frame(participant = NA, slope = NA)
}
})) %>%
mutate(slope = as.numeric(slope))
partial_gsr_zcr
cowplot::plot_grid(partial_ibi_mfcc, partial_ibi_zcr, partial_gsr_mfcc, partial_gsr_zcr, nrows=2)
cowplot::plot_grid(partial_ibi_mfcc, partial_ibi_zcr, partial_gsr_mfcc, partial_gsr_zcr, nrow=2)
cowplot::plot_grid(partial_ibi_mfcc, partial_ibi_zcr, partial_gsr_mfcc, partial_gsr_zcr, nrow=2) +
xlab("Test")
cowplot::plot_grid(partial_ibi_mfcc, partial_ibi_zcr, partial_gsr_mfcc, partial_gsr_zcr, nrow=2) +
labs(x="Test")
cowplot::plot_grid(partial_ibi_mfcc, partial_ibi_zcr, partial_gsr_mfcc, partial_gsr_zcr, nrow=2) +
theme(axis.title.x = element_text("testing"))
if(nrow(part_data) > 0){
curr_model <- lm(mean_ibi ~ mfcc6_std + zero_cross_std, data=part_data)
curr_response <- predict_response(curr_model, c("mfcc6_std"))
slope <- (curr_response[2,2] - curr_response[1,2])/(curr_response[2,1] - curr_response[1,1])
data.frame(participant = as.character(i), slope = as.character(slope))
} else {
data.frame(participant = NA, slope = NA)
}
# ### PARTIAL EFFECTS ### #
# # IBI - MFCC # #
partial_effects_ibi_mfcc <- bind_rows(lapply(1:length(unique(model_data$participant)), function(i){
part_data <- filter(model_data, participant == as.character(i))
if(nrow(part_data) > 0){
curr_model <- lm(mean_ibi ~ mfcc6_std + zero_cross_std, data=part_data)
curr_response <- predict_response(curr_model, c("mfcc6_std"))
slope <- (curr_response[2,2] - curr_response[1,2])/(curr_response[2,1] - curr_response[1,1])
data.frame(participant = as.character(i), slope = as.character(slope))
} else {
data.frame(participant = NA, slope = NA)
}
})) %>%
mutate(slope = as.numeric(slope))
partial_ibi_mfcc <- ggplot(data = partial_effects_ibi_mfcc, aes(x = slope)) +
geom_histogram() +
labs(x = "Estimates for Mean IBI ~ σ(MFCC 6)", y = "") +
theme_bw() +
# theme(panel.grid = element_blank())
theme(axis.title = element_text(size=16, hjust=0.5),
axis.text = element_text(size=16))
partial_ibi_mfcc
# # IBI - ZCR # #
partial_effects_ibi_zcr <- bind_rows(lapply(1:length(unique(model_data$participant)), function(i){
part_data <- filter(model_data, participant == as.character(i))
if(nrow(part_data) > 0){
curr_model <- lm(mean_ibi ~ mfcc6_std + zero_cross_std, data=part_data)
curr_response <- predict_response(curr_model, c("zero_cross_std"))
slope <- (curr_response[2,2] - curr_response[1,2])/(curr_response[2,1] - curr_response[1,1])
data.frame(participant = as.character(i), slope = as.character(slope))
} else {
data.frame(participant = NA, slope = NA)
}
})) %>%
mutate(slope = as.numeric(slope))
partial_ibi_zcr <- ggplot(data = partial_effects_ibi_zcr, aes(x = slope)) +
geom_histogram() +
labs(x = "Estimates for Mean IBI ~ σ(ZCR)", y = "") +
theme_bw() +
# theme(panel.grid = element_blank())
theme(axis.title = element_text(size=16, hjust=0.5),
axis.text = element_text(size=16))
partial_ibi_zcr
# # GSR - MFCC # #
partial_effects_gsr_mfcc <- bind_rows(lapply(1:length(unique(model_data$participant)), function(i){
part_data <- filter(model_data, participant == as.character(i))
if(nrow(part_data) > 0){
curr_model <- lm(gsr_std ~ mfcc6_std + zero_cross_std, data=part_data)
curr_response <- predict_response(curr_model, c("mfcc6_std"))
slope <- (curr_response[2,2] - curr_response[1,2])/(curr_response[2,1] - curr_response[1,1])
data.frame(participant = as.character(i), slope = as.character(slope))
} else {
data.frame(participant = NA, slope = NA)
}
})) %>%
mutate(slope = as.numeric(slope))
partial_gsr_mfcc <- ggplot(data = partial_effects_gsr_mfcc, aes(x = slope)) +
geom_histogram() +
labs(x = "Estimates for ln(σ(GSR)) ~ σ(MFCC 6)", y = "") +
theme_bw() +
# theme(panel.grid = element_blank())
theme(axis.title = element_text(size=16, hjust=0.5),
axis.text = element_text(size=16))
partial_gsr_mfcc
# # GSR - ZCR # #
partial_effects_gsr_zcr <- bind_rows(lapply(1:length(unique(model_data$participant)), function(i){
part_data <- filter(model_data, participant == as.character(i))
if(nrow(part_data) > 0){
curr_model <- lm(gsr_std ~ mfcc6_std + zero_cross_std, data=part_data)
curr_response <- predict_response(curr_model, c("zero_cross_std"))
slope <- (curr_response[2,2] - curr_response[1,2])/(curr_response[2,1] - curr_response[1,1])
data.frame(participant = as.character(i), slope = as.character(slope))
} else {
data.frame(participant = NA, slope = NA)
}
})) %>%
mutate(slope = as.numeric(slope))
partial_gsr_zcr <- ggplot(data = partial_effects_gsr_zcr, aes(x = slope)) +
geom_histogram() +
labs(x = "Estimates for ln(σ(GSR)) ~ σ(ZCR)", y = "") +
theme_bw() +
# theme(panel.grid = element_blank())
theme(axis.title = element_text(size=16, hjust=0.5),
axis.text = element_text(size=16))
partial_gsr_zcr
cowplot::plot_grid(partial_ibi_mfcc, partial_ibi_zcr, partial_gsr_mfcc, partial_gsr_zcr, nrow=2)
partial_title <- ggdraw() +
draw_label("Partial Regressions of Physiological and Audio Features", size = 20)
plot_1 <-cowplot::plot_grid(partial_ibi_mfcc, partial_ibi_zcr, partial_gsr_mfcc, partial_gsr_zcr, nrow=2)
cowplot::plot_grid(partial_title, plot_1, ncol=2, rel_heights = (0.1, 0.9))
cowplot::plot_grid(partial_title, plot_1, ncol=2, rel_heights = c(0.1, 0.9))
cowplot::plot_grid(partial_title, plot_1, ncol=1, rel_heights = c(0.1, 0.9))
partial_gsr_zcr <- ggplot(data = partial_effects_gsr_zcr, aes(x = slope)) +
geom_histogram() +
labs(x = "Estimates for ln(σ(GSR)) ~ σ(ZCR)", y = "") +
theme_bw() +
# theme(panel.grid = element_blank())
theme(axis.title = element_text(size=20, hjust=0.5),
axis.text = element_text(size=16))
partial_gsr_zcr
plot_1 <-cowplot::plot_grid(partial_ibi_mfcc, partial_ibi_zcr, partial_gsr_mfcc, partial_gsr_zcr, nrow=2)
partial_title <- ggdraw() +
draw_label("Partial Regressions for Individual Participants", size = 20)
cowplot::plot_grid(partial_title, plot_1, ncol=1, rel_heights = c(0.1, 0.9))
data.frame(participant = NA, slope = NA)
if(nrow(part_data) > 0){
curr_model <- lm(mean_ibi ~ mfcc6_std + zero_cross_std, data=part_data)
curr_response <- predict_response(curr_model, c("mfcc6_std"))
slope <- (curr_response[2,2] - curr_response[1,2])/(curr_response[2,1] - curr_response[1,1])
data.frame(participant = as.character(i), slope = as.character(slope))
} else {
data.frame(participant = NA, slope = NA)
}
# ### PARTIAL EFFECTS ### #
# # IBI - MFCC # #
partial_effects_ibi_mfcc <- bind_rows(lapply(1:length(unique(model_data$participant)), function(i){
part_data <- filter(model_data, participant == as.character(i))
if(nrow(part_data) > 0){
curr_model <- lm(mean_ibi ~ mfcc6_std + zero_cross_std, data=part_data)
curr_response <- predict_response(curr_model, c("mfcc6_std"))
slope <- (curr_response[2,2] - curr_response[1,2])/(curr_response[2,1] - curr_response[1,1])
data.frame(participant = as.character(i), slope = as.character(slope))
} else {
data.frame(participant = NA, slope = NA)
}
})) %>%
mutate(slope = as.numeric(slope))
partial_ibi_mfcc <- ggplot(data = partial_effects_ibi_mfcc, aes(x = slope)) +
geom_histogram() +
labs(x = "Estimates for Mean IBI ~ σ(MFCC 6)", y = "") +
theme_bw() +
# theme(panel.grid = element_blank())
theme(axis.title = element_text(size=16, hjust=0.5),
axis.text = element_text(size=20))
partial_ibi_mfcc
# # IBI - ZCR # #
partial_effects_ibi_zcr <- bind_rows(lapply(1:length(unique(model_data$participant)), function(i){
part_data <- filter(model_data, participant == as.character(i))
if(nrow(part_data) > 0){
curr_model <- lm(mean_ibi ~ mfcc6_std + zero_cross_std, data=part_data)
curr_response <- predict_response(curr_model, c("zero_cross_std"))
slope <- (curr_response[2,2] - curr_response[1,2])/(curr_response[2,1] - curr_response[1,1])
data.frame(participant = as.character(i), slope = as.character(slope))
} else {
data.frame(participant = NA, slope = NA)
}
})) %>%
mutate(slope = as.numeric(slope))
partial_ibi_zcr <- ggplot(data = partial_effects_ibi_zcr, aes(x = slope)) +
geom_histogram() +
labs(x = "Estimates for Mean IBI ~ σ(ZCR)", y = "") +
theme_bw() +
# theme(panel.grid = element_blank())
theme(axis.title = element_text(size=16, hjust=0.5),
axis.text = element_text(size=20))
partial_ibi_zcr
# # GSR - MFCC # #
partial_effects_gsr_mfcc <- bind_rows(lapply(1:length(unique(model_data$participant)), function(i){
part_data <- filter(model_data, participant == as.character(i))
if(nrow(part_data) > 0){
curr_model <- lm(gsr_std ~ mfcc6_std + zero_cross_std, data=part_data)
curr_response <- predict_response(curr_model, c("mfcc6_std"))
slope <- (curr_response[2,2] - curr_response[1,2])/(curr_response[2,1] - curr_response[1,1])
data.frame(participant = as.character(i), slope = as.character(slope))
} else {
data.frame(participant = NA, slope = NA)
}
})) %>%
mutate(slope = as.numeric(slope))
partial_gsr_mfcc <- ggplot(data = partial_effects_gsr_mfcc, aes(x = slope)) +
geom_histogram() +
labs(x = "Estimates for ln(σ(GSR)) ~ σ(MFCC 6)", y = "") +
theme_bw() +
# theme(panel.grid = element_blank())
theme(axis.title = element_text(size=16, hjust=0.5),
axis.text = element_text(size=20))
partial_gsr_mfcc
# # GSR - ZCR # #
partial_effects_gsr_zcr <- bind_rows(lapply(1:length(unique(model_data$participant)), function(i){
part_data <- filter(model_data, participant == as.character(i))
if(nrow(part_data) > 0){
curr_model <- lm(gsr_std ~ mfcc6_std + zero_cross_std, data=part_data)
curr_response <- predict_response(curr_model, c("zero_cross_std"))
slope <- (curr_response[2,2] - curr_response[1,2])/(curr_response[2,1] - curr_response[1,1])
data.frame(participant = as.character(i), slope = as.character(slope))
} else {
data.frame(participant = NA, slope = NA)
}
})) %>%
mutate(slope = as.numeric(slope))
partial_gsr_zcr <- ggplot(data = partial_effects_gsr_zcr, aes(x = slope)) +
geom_histogram() +
labs(x = "Estimates for ln(σ(GSR)) ~ σ(ZCR)", y = "") +
theme_bw() +
# theme(panel.grid = element_blank())
theme(axis.title = element_text(size=20, hjust=0.5),
axis.text = element_text(size=16))
partial_gsr_zcr
plot_1 <-cowplot::plot_grid(partial_ibi_mfcc, partial_ibi_zcr, partial_gsr_mfcc, partial_gsr_zcr, nrow=2)
partial_title <- ggdraw() +
draw_label("Partial Regressions for Individual Participants", size = 20)
cowplot::plot_grid(partial_title, plot_1, ncol=1, rel_heights = c(0.1, 0.9))
# ### PARTIAL EFFECTS ### #
# # IBI - MFCC # #
partial_effects_ibi_mfcc <- bind_rows(lapply(1:length(unique(model_data$participant)), function(i){
part_data <- filter(model_data, participant == as.character(i))
if(nrow(part_data) > 0){
curr_model <- lm(mean_ibi ~ mfcc6_std + zero_cross_std, data=part_data)
curr_response <- predict_response(curr_model, c("mfcc6_std"))
slope <- (curr_response[2,2] - curr_response[1,2])/(curr_response[2,1] - curr_response[1,1])
data.frame(participant = as.character(i), slope = as.character(slope))
} else {
data.frame(participant = NA, slope = NA)
}
})) %>%
mutate(slope = as.numeric(slope))
partial_ibi_mfcc <- ggplot(data = partial_effects_ibi_mfcc, aes(x = slope)) +
geom_histogram() +
labs(x = "Estimates for Mean IBI ~ σ(MFCC 6)", y = "") +
theme_bw() +
# theme(panel.grid = element_blank())
theme(axis.title = element_text(size=20, hjust=0.5),
axis.text = element_text(size=16))
partial_ibi_mfcc
# # IBI - ZCR # #
partial_effects_ibi_zcr <- bind_rows(lapply(1:length(unique(model_data$participant)), function(i){
part_data <- filter(model_data, participant == as.character(i))
if(nrow(part_data) > 0){
curr_model <- lm(mean_ibi ~ mfcc6_std + zero_cross_std, data=part_data)
curr_response <- predict_response(curr_model, c("zero_cross_std"))
slope <- (curr_response[2,2] - curr_response[1,2])/(curr_response[2,1] - curr_response[1,1])
data.frame(participant = as.character(i), slope = as.character(slope))
} else {
data.frame(participant = NA, slope = NA)
}
})) %>%
mutate(slope = as.numeric(slope))
partial_ibi_zcr <- ggplot(data = partial_effects_ibi_zcr, aes(x = slope)) +
geom_histogram() +
labs(x = "Estimates for Mean IBI ~ σ(ZCR)", y = "") +
theme_bw() +
# theme(panel.grid = element_blank())
theme(axis.title = element_text(size=20, hjust=0.5),
axis.text = element_text(size=16))
partial_ibi_zcr
# # GSR - MFCC # #
partial_effects_gsr_mfcc <- bind_rows(lapply(1:length(unique(model_data$participant)), function(i){
part_data <- filter(model_data, participant == as.character(i))
if(nrow(part_data) > 0){
curr_model <- lm(gsr_std ~ mfcc6_std + zero_cross_std, data=part_data)
curr_response <- predict_response(curr_model, c("mfcc6_std"))
slope <- (curr_response[2,2] - curr_response[1,2])/(curr_response[2,1] - curr_response[1,1])
data.frame(participant = as.character(i), slope = as.character(slope))
} else {
data.frame(participant = NA, slope = NA)
}
})) %>%
mutate(slope = as.numeric(slope))
partial_gsr_mfcc <- ggplot(data = partial_effects_gsr_mfcc, aes(x = slope)) +
geom_histogram() +
labs(x = "Estimates for ln(σ(GSR)) ~ σ(MFCC 6)", y = "") +
theme_bw() +
# theme(panel.grid = element_blank())
theme(axis.title = element_text(size=20, hjust=0.5),
axis.text = element_text(size=16))
partial_gsr_mfcc
# # GSR - ZCR # #
partial_effects_gsr_zcr <- bind_rows(lapply(1:length(unique(model_data$participant)), function(i){
part_data <- filter(model_data, participant == as.character(i))
if(nrow(part_data) > 0){
curr_model <- lm(gsr_std ~ mfcc6_std + zero_cross_std, data=part_data)
curr_response <- predict_response(curr_model, c("zero_cross_std"))
slope <- (curr_response[2,2] - curr_response[1,2])/(curr_response[2,1] - curr_response[1,1])
data.frame(participant = as.character(i), slope = as.character(slope))
} else {
data.frame(participant = NA, slope = NA)
}
})) %>%
mutate(slope = as.numeric(slope))
partial_gsr_zcr <- ggplot(data = partial_effects_gsr_zcr, aes(x = slope)) +
geom_histogram() +
labs(x = "Estimates for ln(σ(GSR)) ~ σ(ZCR)", y = "") +
theme_bw() +
# theme(panel.grid = element_blank())
theme(axis.title = element_text(size=20, hjust=0.5),
axis.text = element_text(size=16))
partial_gsr_zcr
plot_1 <-cowplot::plot_grid(partial_ibi_mfcc, partial_ibi_zcr, partial_gsr_mfcc, partial_gsr_zcr, nrow=2)
partial_title <- ggdraw() +
draw_label("Partial Regressions for Individual Participants", size = 20)
cowplot::plot_grid(partial_title, plot_1, ncol=1, rel_heights = c(0.1, 0.9))
cowplot::plot_grid(partial_title, plot_1, ncol=1, rel_heights = c(0.05, 0.95))
partial_ibi_mfcc <- ggplot(data = partial_effects_ibi_mfcc, aes(x = slope)) +
geom_histogram() +
labs(x = "Estimates for Mean IBI ~ σ(MFCC 6)", y = "Count") +
theme_bw() +
# theme(panel.grid = element_blank())
theme(axis.title = element_text(size=20, hjust=0.5),
axis.text = element_text(size=16))
partial_ibi_mfcc
# # IBI - ZCR # #
partial_effects_ibi_zcr <- bind_rows(lapply(1:length(unique(model_data$participant)), function(i){
part_data <- filter(model_data, participant == as.character(i))
if(nrow(part_data) > 0){
curr_model <- lm(mean_ibi ~ mfcc6_std + zero_cross_std, data=part_data)
curr_response <- predict_response(curr_model, c("zero_cross_std"))
slope <- (curr_response[2,2] - curr_response[1,2])/(curr_response[2,1] - curr_response[1,1])
data.frame(participant = as.character(i), slope = as.character(slope))
} else {
data.frame(participant = NA, slope = NA)
}
})) %>%
mutate(slope = as.numeric(slope))
partial_ibi_zcr <- ggplot(data = partial_effects_ibi_zcr, aes(x = slope)) +
geom_histogram() +
labs(x = "Estimates for Mean IBI ~ σ(ZCR)", y = "") +
theme_bw() +
# theme(panel.grid = element_blank())
theme(axis.title = element_text(size=20, hjust=0.5),
axis.text = element_text(size=16))
partial_ibi_zcr
# # GSR - MFCC # #
partial_effects_gsr_mfcc <- bind_rows(lapply(1:length(unique(model_data$participant)), function(i){
part_data <- filter(model_data, participant == as.character(i))
if(nrow(part_data) > 0){
curr_model <- lm(gsr_std ~ mfcc6_std + zero_cross_std, data=part_data)
curr_response <- predict_response(curr_model, c("mfcc6_std"))
slope <- (curr_response[2,2] - curr_response[1,2])/(curr_response[2,1] - curr_response[1,1])
data.frame(participant = as.character(i), slope = as.character(slope))
} else {
data.frame(participant = NA, slope = NA)
}
})) %>%
mutate(slope = as.numeric(slope))
partial_gsr_mfcc <- ggplot(data = partial_effects_gsr_mfcc, aes(x = slope)) +
geom_histogram() +
labs(x = "Estimates for ln(σ(GSR)) ~ σ(MFCC 6)", y = "Count") +
theme_bw() +
# theme(panel.grid = element_blank())
theme(axis.title = element_text(size=20, hjust=0.5),
axis.text = element_text(size=16))
partial_gsr_mfcc
# # GSR - ZCR # #
partial_effects_gsr_zcr <- bind_rows(lapply(1:length(unique(model_data$participant)), function(i){
part_data <- filter(model_data, participant == as.character(i))
if(nrow(part_data) > 0){
curr_model <- lm(gsr_std ~ mfcc6_std + zero_cross_std, data=part_data)
curr_response <- predict_response(curr_model, c("zero_cross_std"))
slope <- (curr_response[2,2] - curr_response[1,2])/(curr_response[2,1] - curr_response[1,1])
data.frame(participant = as.character(i), slope = as.character(slope))
} else {
data.frame(participant = NA, slope = NA)
}
})) %>%
mutate(slope = as.numeric(slope))
partial_gsr_zcr <- ggplot(data = partial_effects_gsr_zcr, aes(x = slope)) +
geom_histogram() +
labs(x = "Estimates for ln(σ(GSR)) ~ σ(ZCR)", y = "") +
theme_bw() +
# theme(panel.grid = element_blank())
theme(axis.title = element_text(size=20, hjust=0.5),
axis.text = element_text(size=16))
partial_gsr_zcr
plot_1 <-cowplot::plot_grid(partial_ibi_mfcc, partial_ibi_zcr, partial_gsr_mfcc, partial_gsr_zcr, nrow=2)
partial_title <- ggdraw() +
draw_label("Partial Regressions for Individual Participants", size = 20)
cowplot::plot_grid(partial_title, plot_1, ncol=1, rel_heights = c(0.05, 0.95))
# Create models
gsr_full <- lmer(gsr_std ~ zero_cross_std + mfcc6_std +
(zero_cross_std|participant) + (mfcc6_std|participant),
data=model_data)
visualize(gsr_full, plot="residuals")
# Create models
gsr_full <- lmer(mean_ibi ~ zero_cross_std + mfcc6_std +
(zero_cross_std|participant) + (mfcc6_std|participant),
data=model_data)
gsr_full
visualize(gsr_full, plot="residuals")
# Create models
gsr_full <- lmer(gsr_std ~ zero_cross_std + mfcc6_std +
(zero_cross_std|participant) + (mfcc6_std|participant),
data=model_data)
visualize(gsr_full, plot="residuals")
cowplot::plot_grid(resids_title, resids, nrow = 2, rel_heights = c(0.05, 0.95))
resids_title <- ggdraw() + draw_label("Residual plots Model 1")
cowplot::plot_grid(resids_title, resids, nrow = 2, rel_heights = c(0.05, 0.95))
resids <- visualize(gsr_full, plot="residuals")
resids_title <- ggdraw() + draw_label("Residual plots Model 1")
cowplot::plot_grid(resids_title, resids, nrow = 2, rel_heights = c(0.05, 0.95))
resids_title <- ggdraw() + draw_label("Residual plots Model 1", size = 20)
cowplot::plot_grid(resids_title, resids, nrow = 2, rel_heights = c(0.05, 0.95))
